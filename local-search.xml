<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>BUUCTF_Misc WP</title>
    <link href="/2024/09/21/BUUCTF-Misc-WP/"/>
    <url>/2024/09/21/BUUCTF-Misc-WP/</url>
    
    <content type="html"><![CDATA[<h1 id="1-签到"><a href="#1-签到" class="headerlink" title="1.签到"></a>1.签到</h1><p>flag{buu_ctf}</p><h1 id="2-金三胖"><a href="#2-金三胖" class="headerlink" title="2.金三胖"></a>2.金三胖</h1><p>逐帧分析<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.7zqe6spzn3.webp" alt="1"><br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.3d4r63rfzi.webp" alt="2"><br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/3.13lqmm6pim.webp" alt="3"></p><h1 id="3-你竟然赶我走"><a href="#3-你竟然赶我走" class="headerlink" title="3.你竟然赶我走"></a>3.你竟然赶我走</h1><p>一张jpg，扔进010查看<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.6m3v2rxdwb.webp" alt="1"></p><h1 id="4-二维码"><a href="#4-二维码" class="headerlink" title="4.二维码"></a>4.二维码</h1><p>得到一张二维码，扫一扫未得出flag.<br>扔进010，发现4number.txt,foremost提取得一个加密zip.<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.8dwtxw9v92.webp" alt="1"><br>结合文件名4number，猜测是4位数字密码，passware爆破得7639.</p><h1 id="5-大白"><a href="#5-大白" class="headerlink" title="5.大白"></a>5.大白</h1><p>扔进010，发现CRC error<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.9kg56jefw8.webp" alt="1"><br>用<a href="https://github.com/AabyssZG/Deformed-Image-Restorer">曾哥的脚本</a>自动爆破宽高<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.7w6s9pl6uf.webp" alt="2"></p><h1 id="6-乌镇峰会种图"><a href="#6-乌镇峰会种图" class="headerlink" title="6.乌镇峰会种图"></a>6.乌镇峰会种图</h1><p>扔进010查看<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.39l59pejg4.webp" alt="1"></p><h1 id="7-wireshark"><a href="#7-wireshark" class="headerlink" title="7.wireshark"></a>7.wireshark</h1><p>一段流量包，用wireshark打开<br>要找管理员密码，找表单提交<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.wiisky5l5.webp" alt="1"><br>追踪tcp流<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.ic31ppuq1.webp" alt="2"></p><h1 id="8-N种方法解决"><a href="#8-N种方法解决" class="headerlink" title="8.N种方法解决"></a>8.N种方法解决</h1><p>一个无法运行的exe文件，用记事本打开<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.4uaw99mmgs.webp" alt="1"><br>显然是一个转换成base64的jpg,用CyberChef输出图片<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.67xfdaxxx5.webp" alt="2"><br>扫码得flag.</p><h1 id="9-基础破解"><a href="#9-基础破解" class="headerlink" title="9.基础破解"></a>9.基础破解</h1><p>四位数加密的rar，passware破解<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.9nzr5eie1l.webp" alt="1"><br>打开flag.txt发现一串base64，扔进CyberChef<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.4g4giepik3.webp" alt="2"></p><h1 id="10-文件中的秘密"><a href="#10-文件中的秘密" class="headerlink" title="10.文件中的秘密"></a>10.文件中的秘密</h1><p>010打开，发现exif，怀疑加了备注.查看属性<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.231u17kle0.webp" alt="1"></p><h1 id="11-LSB"><a href="#11-LSB" class="headerlink" title="11.LSB"></a>11.LSB</h1><p>lsb隐写<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.175clrkon6.webp" alt="1"><br>一眼png图片，保存为.png<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.83a05y3ukc.webp" alt="2"><br>扫码得flag</p><h1 id="12-zip伪加密"><a href="#12-zip伪加密" class="headerlink" title="12.zip伪加密"></a>12.zip伪加密</h1><p>伪加密,010打开<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.4jo2g5aeo4.webp" alt="1"><br>修改<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.pfax6sgqw.webp" alt="2"><br>打开得flag</p><h1 id="13-被嗅探的流量"><a href="#13-被嗅探的流量" class="headerlink" title="13.被嗅探的流量"></a>13.被嗅探的流量</h1><p>流量包，wireshark打开<br>筛选http<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.5fkjvm0bzl.webp" alt="1"><br>在最后一条找到flag<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.4xui70yyeu.webp" alt="2"></p><h1 id="14-rar"><a href="#14-rar" class="headerlink" title="14.rar"></a>14.rar</h1><p>4位纯数字，ARCHPR直接破解<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.2donuui76e.webp" alt="1"><br>（passware好像破解不出）</p><h1 id="15-qr"><a href="#15-qr" class="headerlink" title="15.qr"></a>15.qr</h1><p>扫码直接得flag</p><h1 id="16-镜子里面的世界"><a href="#16-镜子里面的世界" class="headerlink" title="16.镜子里面的世界"></a>16.镜子里面的世界</h1><p>结合图片名称steg猜测要用stegsolve打开.尝试lsb<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.3k7z3ho65k.webp" alt="1"></p><h1 id="17-ningen"><a href="#17-ningen" class="headerlink" title="17.ningen"></a>17.ningen</h1><p>010查看，发现尾部有ningen.txt<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.1aoyk0ftjp.webp" alt="1"><br>foremost提取<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.2obho1qvkk.webp" alt="2"><br>发现是一个加密zip，结合题干可知是4位数字密码.ARCHPR破解<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/3.1hs6fg1yz7.webp" alt="3"></p><h1 id="18-爱因斯坦"><a href="#18-爱因斯坦" class="headerlink" title="18.爱因斯坦"></a>18.爱因斯坦</h1><p>010打开，在开头看到exif，结尾看到flag.txt<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.361jcnd0fr.webp" alt="1"><br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.45nbfbo8m.webp" alt="2"><br>打开照片备注看一下<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/3.175cmb7i45.webp" alt="3"><br>（并不是flag）</p><p>binwalk提取<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/4.3nrl18ee0j.webp" alt="4"><br>得到一个加密zip，猜测备注就是password<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/5.4n7oeeh56c.webp" alt="5"></p><h1 id="19-小明的保险箱"><a href="#19-小明的保险箱" class="headerlink" title="19.小明的保险箱"></a>19.小明的保险箱</h1><p>binwalk提取文件，得加密rar<br>passware破解<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.2a51x8l7ff.webp" alt="1"></p><h1 id="20-easycap"><a href="#20-easycap" class="headerlink" title="20.easycap"></a>20.easycap</h1><p>流量包，wireshark打开<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.9nzr6svly8.webp" alt="1"><br>追踪tcp流<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.9gwjbd9gin.webp" alt="2"></p><h1 id="21-隐藏的钥匙"><a href="#21-隐藏的钥匙" class="headerlink" title="21.隐藏的钥匙"></a>21.隐藏的钥匙</h1><p>010打开，发现base64编码的flag<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.54xq3u2nwd.webp" alt="1"><br>转换为flag<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.7w6sbwory4.webp" alt="2"></p><h1 id="22-另外一个世界"><a href="#22-另外一个世界" class="headerlink" title="22.另外一个世界"></a>22.另外一个世界</h1><p>010打开，在末尾发现一串二进制<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.8l01vxionx.webp" alt="1"><br>转换为flag<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.231u2m7pek.webp" alt="2"></p><h1 id="23-数据包中的线索"><a href="#23-数据包中的线索" class="headerlink" title="23.数据包中的线索"></a>23.数据包中的线索</h1><p>wireshark打开，筛选http<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.9dcxdorhff.webp" alt="1"><br>追踪tcp流，发现base64<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.4xui8ff37f.webp" alt="2"><br>输出为jpg<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/3.sywwbhx4p.webp" alt="3"><br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/4.7p9a0ngu4.webp" alt="4"></p><h1 id="24-神秘龙卷风"><a href="#24-神秘龙卷风" class="headerlink" title="24.神秘龙卷风"></a>24.神秘龙卷风</h1><p>加密rar，由题得是4位数密码，passware破解<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.7p3kgiqm02.webp" alt="1"><br>发现一堆像龙卷风一样的字符串，经查是brainfuck编码<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.45ncbjsv6.webp" alt="2"><br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/3.32hxfts2ch.webp" alt="3"></p><h1 id="25-FLAG"><a href="#25-FLAG" class="headerlink" title="25.FLAG"></a>25.FLAG</h1><p>010打开没什么发现，尝试lsb<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.99tbgkmd3f.webp" alt="1"><br>输出为zip，发现文件损坏<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.8ojnu9rwsq.webp" alt="2"><br>bandizip修复,解压，转换成字符串<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/3.26lg0ygxjd.webp" alt="3"></p><h1 id="26-假如给我三天光明"><a href="#26-假如给我三天光明" class="headerlink" title="26.假如给我三天光明"></a>26.假如给我三天光明</h1><p>一张图片和一个加密zip，图上是盲文<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.3uusy5nqdp.webp" alt="1"><br>找对照表翻译，kmdonowg，为压缩包密码.解压得音频文件，Audacity打开<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.8hgfyum6ly.webp" alt="2"><br>摩斯密码，翻译得flag（记得改为小写）</p><h1 id="27-后门查杀"><a href="#27-后门查杀" class="headerlink" title="27.后门查杀"></a>27.后门查杀</h1><p>根据提示，用D盾扫描文件<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.6f0nat46ng.webp" alt="1"><br>打开include.php，找到密码即为flag<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.175cntb6p8.webp" alt="2"></p><h1 id="28-webshell后门"><a href="#28-webshell后门" class="headerlink" title="28.webshell后门"></a>28.webshell后门</h1><p>和上一题一样<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.5mnrtqszqt.webp" alt="1"><br>打开zp.php<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.1zi867x794.webp" alt="2"></p><h1 id="29-来首歌吧"><a href="#29-来首歌吧" class="headerlink" title="29.来首歌吧"></a>29.来首歌吧</h1><p>音频文件，Audacity打开发现摩斯密码<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.6wqp037gye.webp" alt="1"></p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">.....</span> -<span class="hljs-string">...</span> -<span class="hljs-string">.-.</span> <span class="hljs-params">----</span>. <span class="hljs-string">..---</span> <span class="hljs-string">.....</span> -<span class="hljs-string">....</span> <span class="hljs-string">....-</span> <span class="hljs-params">----</span>. -<span class="hljs-string">.-.</span> -<span class="hljs-string">...</span> <span class="hljs-params">-----</span> <span class="hljs-string">.----</span> <span class="hljs-params">---</span><span class="hljs-string">..</span> <span class="hljs-params">---</span><span class="hljs-string">..</span> <span class="hljs-string">..-.</span> <span class="hljs-string">.....</span> <span class="hljs-string">..---</span> . -<span class="hljs-string">....</span> <span class="hljs-string">.----</span> --<span class="hljs-string">...</span> -<span class="hljs-string">..</span> --<span class="hljs-string">...</span> <span class="hljs-params">-----</span> <span class="hljs-params">----</span>. <span class="hljs-string">..---</span> <span class="hljs-params">----</span>. <span class="hljs-string">.----</span> <span class="hljs-params">----</span>. <span class="hljs-string">.----</span> -<span class="hljs-string">.-.</span><br></code></pre></td></tr></table></figure><p>翻译得flag</p><h1 id="30-面具下的flag"><a href="#30-面具下的flag" class="headerlink" title="30.面具下的flag"></a>30.面具下的flag</h1><p>010打开发现flag.vmdk，尝试binwalk分离文件<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.1oved4hygq.webp" alt="1"><br>分离出伪加密压缩包，修改16进制文件取消伪加密<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.6m3v6yvq9k.webp" alt="2"><br>解压出vmdk文件，放入Linux用命令解压</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-number">7</span>z <span class="hljs-attribute">x</span> flag<span class="hljs-selector-class">.vmdk</span> -o./<br></code></pre></td></tr></table></figure><p>发现key_part_one和key_part_two两个文件，打开是brainfuck和Ook<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/3.sywxo8a0r.webp" alt="3"><br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/4.6pnh4ooszg.webp" alt="4"></p><h1 id="31-荷兰宽带数据泄露"><a href="#31-荷兰宽带数据泄露" class="headerlink" title="31.荷兰宽带数据泄露"></a>31.荷兰宽带数据泄露</h1><p>conf.bin,路由器配置文件.routerpassview打开<br>尝试password和username，找到flag<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.1vym8kfifl.webp" alt="1"></p><h1 id="32-九连环"><a href="#32-九连环" class="headerlink" title="32.九连环"></a>32.九连环</h1><p>010打开没什么发现，尝试foremost提取<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.7ax4r0tfmf.webp" alt="1"><br>提取出加密压缩包，发现伪加密，修改<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.3rb717qpue.webp" alt="2"><br>打开压缩包，steghide提取隐藏文件<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/3.7w6sdbnvx1.webp" alt="3"><br>ko.txt为压缩包密码,打开压缩包获得flag<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/4.7p9beo02d.webp" alt="4"></p><h1 id="33-被劫持的神秘礼物"><a href="#33-被劫持的神秘礼物" class="headerlink" title="33.被劫持的神秘礼物"></a>33.被劫持的神秘礼物</h1><p>wireshark打开，筛选http，找到登录的数据包<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.1lbsfiyiqu.webp" alt="1"><br>追踪tcp流<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.1024t842g5.webp" alt="2"><br>将adminaadminb编码为md5<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/3.4g4glbdpic.webp" alt="3"></p><h1 id="34-BJDCTF2020-认真你就输了"><a href="#34-BJDCTF2020-认真你就输了" class="headerlink" title="34.[BJDCTF2020]认真你就输了"></a>34.[BJDCTF2020]认真你就输了</h1><p>一个excel,打开看到flag.txt字样.foremost提取文件<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.2rv3o503r9.webp" alt="1"></p><h1 id="35-被偷走的文件"><a href="#35-被偷走的文件" class="headerlink" title="35.被偷走的文件"></a>35.被偷走的文件</h1><p>wireshark打开,看到flag.rar,foremost提取出加密压缩包<br>猜测4位数密码，passware破解<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.9rjd61olxv.webp" alt="1"></p><h1 id="36-BJDCTF2020-藏藏藏"><a href="#36-BJDCTF2020-藏藏藏" class="headerlink" title="36.[BJDCTF2020]藏藏藏"></a>36.[BJDCTF2020]藏藏藏</h1><p>010没有发现，尝试foremost提取文件<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.6wqp09sj6f.webp" alt="1"><br>得到压缩包，打开扫码得flag<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.3k7z5wdxde.webp" alt="2"></p><h1 id="37-GXYCTF2019-佛系青年"><a href="#37-GXYCTF2019-佛系青年" class="headerlink" title="37.[GXYCTF2019]佛系青年"></a>37.[GXYCTF2019]佛系青年</h1><p>伪加密压缩包，09改为00<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.1024t9vqz4.webp" alt="1"><br>打开发现是佛曰加密<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.4n7ogsrjgw.webp" alt="2"><br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/3.6t732kj781.webp" alt="3"></p><h1 id="38-BJDCTF2020-你猜我是个啥"><a href="#38-BJDCTF2020-你猜我是个啥" class="headerlink" title="38.[BJDCTF2020]你猜我是个啥"></a>38.[BJDCTF2020]你猜我是个啥</h1><p>打不开的zip,010查看发现是png<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.2a51zm0trs.webp" alt="1"><br>修改后缀<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.8z6hocxygo.webp" alt="2"><br>扫码未获得flag，010查看，在末尾看到flag<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/3.4qraej7po7.webp" alt="3"></p><h1 id="39-刷新过的图片"><a href="#39-刷新过的图片" class="headerlink" title="39.刷新过的图片"></a>39.刷新过的图片</h1><p>f5隐写，提取<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.lvp2hp3px.webp" alt="1"><br>010打开output.txt,根据文件头可知是zip.修改后缀<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.83a08z2u51.webp" alt="2"><br>伪加密zip，01改为00<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/3.2krvstum1g.webp" alt="3"><br>解压得flag</p><h1 id="40-秘密文件"><a href="#40-秘密文件" class="headerlink" title="40.秘密文件"></a>40.秘密文件</h1><p>筛选ftp<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.4xuia2netb.webp" alt="1"><br>发现rar，foremost提取<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.8z6hogri66.webp" alt="2"><br>加密，尝试4位数破解<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/3.60u7kyj8ou.webp" alt="3"><br>解压得flag</p><h1 id="41-BJDCTF2020-鸡你太美"><a href="#41-BJDCTF2020-鸡你太美" class="headerlink" title="41.[BJDCTF2020]鸡你太美"></a>41.[BJDCTF2020]鸡你太美</h1><p>gif打不开，010打开发现缺少文件头<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.sywxz7lpu.webp" alt="1"><br>补上，保存为1.gif<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.9gwjd2a8q9.webp" alt="2"><br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/3.26lg20inrn.gif" alt="3"></p><h1 id="42-snake"><a href="#42-snake" class="headerlink" title="42.snake"></a>42.snake</h1><p>010打开，在尾部看到zip的文件格式<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.6bh1e57dsm.webp" alt="1"><br>复制到新的hex文件，保存为.zip<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.1ovedg8u50.webp" alt="2"><br>解压，打开key发现base64，解码<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/3.3k7z62l9qq.webp" alt="3"><br>google一下，歌名是Anaconda（蟒蛇），所以密钥为Anaconda.与蛇有关的加密方式是<a href="http://serpent.online-domain-tools.com/">serpent</a><br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/4.67xfgfeb2q.webp" alt="4"></p><h1 id="43-BJDCTF2020-just-a-rar"><a href="#43-BJDCTF2020-just-a-rar" class="headerlink" title="43.[BJDCTF2020]just_a_rar"></a>43.[BJDCTF2020]just_a_rar</h1><p>加密rar，passware解出密码2016，解压出一张图片<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.64dtiq22ky.webp" alt="1"><br>flag在备注里<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.ic34v0ude.webp" alt="2"></p><h1 id="44-菜刀666"><a href="#44-菜刀666" class="headerlink" title="44.菜刀666"></a>44.菜刀666</h1><p>wireshark打开<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.2krvsyhkg9.webp" alt="1"><br>看到z1和z2，z1是base64，z2开头是FFD8FF，显然是jpg<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.2yybjtpvbb.webp" alt="2"><br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/3.7i0cmsvc92.webp" alt="3"><br>foremost提取文件，得加密zip.用上图密码打开得flag</p><h1 id="45-BJDCTF2020-一叶障目"><a href="#45-BJDCTF2020-一叶障目" class="headerlink" title="45.[BJDCTF2020]一叶障目"></a>45.[BJDCTF2020]一叶障目</h1><p>010打开，发现CRC校验错误<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.64dtis17b3.webp" alt="1"><br>Deformed-Image-Restorer脚本爆破<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.5fkjyrdoam.webp" alt="2"></p><h1 id="46-SWPU2019-神奇的二维码"><a href="#46-SWPU2019-神奇的二维码" class="headerlink" title="46.[SWPU2019]神奇的二维码"></a>46.[SWPU2019]神奇的二维码</h1><p>binwalk分离文件<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.5j45wo2wl2.webp" alt="1"><br>先看encode.txt，base64解码得asdfghjkl1234567890<br>再看flag.doc,是编码很多次的base64，解码<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.7egqpafc6t.webp" alt="2"><br>是18394.rar的密码，解压出音频文件，Audacity打开<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/3.4uawcnfdkl.webp" alt="3"><br>摩斯码，转换成flag（小写）</p><h1 id="47-BJDCTF2020-纳尼"><a href="#47-BJDCTF2020-纳尼" class="headerlink" title="47.[BJDCTF2020]纳尼"></a>47.[BJDCTF2020]纳尼</h1><p>打不开的gif文件，010打开<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.2vepmbq6pj.webp" alt="1"><br>缺少文件头，补上<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.7ljykqht2u.webp" alt="2"><br>保存为gif<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/3.8hgg06rhiw.gif" alt="3"><br>base64编码，解出flag</p><h1 id="48-excel破解"><a href="#48-excel破解" class="headerlink" title="48.excel破解"></a>48.excel破解</h1><p>010打开，直接找到flag<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.4ckuo36knk.webp" alt="1"></p><h1 id="49-HBNIS2018-来题中等的吧"><a href="#49-HBNIS2018-来题中等的吧" class="headerlink" title="49.[HBNIS2018]来题中等的吧"></a>49.[HBNIS2018]来题中等的吧</h1><p>摩斯码，翻译出flag（小写）<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.6m3v7kwscd.webp" alt="1"></p><h1 id="50-ACTF新生赛2020-outguess"><a href="#50-ACTF新生赛2020-outguess" class="headerlink" title="50.[ACTF新生赛2020]outguess"></a>50.[ACTF新生赛2020]outguess</h1><p>010打开看到exif，看备注<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.4jo2jjxm30.webp" alt="1"><br>价值观编码，解得abc<br>由题得这题要用outguess，abc为密码<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.60u7lb1qto.webp" alt="2"><br>打开output.txt得flag</p><h1 id="51-谁赢了比赛？"><a href="#51-谁赢了比赛？" class="headerlink" title="51.谁赢了比赛？"></a>51.谁赢了比赛？</h1><p>010打开，在结尾找到flag.txt<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.6m3v93vnj9.webp" alt="1"><br>foremost分离出一个加密压缩包，尝试4位数字破解得1020.解压出一个没用的txt和一个gif.<br>逐帧分析,在313帧找到了不一样的<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.2a521kcc12.webp" alt="2"><br>010打开没有发现,lsb没有结果.尝试换通道<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/3.9rjd81q2g4.webp" alt="3"><br>扫码得flag</p><h1 id="52-穿越时空的思念"><a href="#52-穿越时空的思念" class="headerlink" title="52.穿越时空的思念"></a>52.穿越时空的思念</h1><p>Audacity打开，右声道是一段带杂音的摩斯码<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.3uut12sa63.webp" alt="1"></p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">..-.</span> <span class="hljs-params">-----</span> <span class="hljs-string">..---</span> <span class="hljs-params">----</span>. -<span class="hljs-string">...</span> -<span class="hljs-string">..</span> -<span class="hljs-string">....</span> <span class="hljs-string">..-.</span> <span class="hljs-string">.....</span> <span class="hljs-string">.....</span> <span class="hljs-string">.----</span> <span class="hljs-string">.----</span> <span class="hljs-string">...--</span> <span class="hljs-params">----</span>. . . -<span class="hljs-string">..</span> . -<span class="hljs-string">...</span> <span class="hljs-params">---</span><span class="hljs-string">..</span> . <span class="hljs-string">....-</span> <span class="hljs-string">.....</span> <span class="hljs-string">.-</span> <span class="hljs-string">.----</span> --<span class="hljs-string">...</span> <span class="hljs-string">.....</span> -<span class="hljs-string">...</span> <span class="hljs-params">-----</span> --<span class="hljs-string">...</span> <span class="hljs-params">---</span><span class="hljs-string">..</span> -<span class="hljs-string">....</span><br></code></pre></td></tr></table></figure><p>解码得flag</p><blockquote><p>ps：有其他师傅用kali中的morse2ascii直接解出，不知为何无法复现<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.6m3v95ee7v.webp" alt="2"></p></blockquote><h1 id="53-WUSTCTF2020-find-me"><a href="#53-WUSTCTF2020-find-me" class="headerlink" title="53.[WUSTCTF2020]find_me"></a>53.[WUSTCTF2020]find_me</h1><p>在备注里看到盲文<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.60u7oz3zrq.webp" alt="1"><br>解码得flag<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.2vepq19kut.webp" alt="2"></p><h1 id="54-SWPU2019-我有一只马里奥"><a href="#54-SWPU2019-我有一只马里奥" class="headerlink" title="54.[SWPU2019]我有一只马里奥"></a>54.[SWPU2019]我有一只马里奥</h1><p>运行程序，生成1.txt</p><blockquote><p>ntfs<br>flag.txt</p></blockquote><p><a href="https://joner11234.github.io/article/85357d8d.html">NTFS数据流隐写</a></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">notepad</span> <span class="hljs-number">1</span>.txt:flag.txt<br></code></pre></td></tr></table></figure><p>查看隐藏文件得到flag</p><h1 id="55-GUET-CTF2019-KO"><a href="#55-GUET-CTF2019-KO" class="headerlink" title="55.[GUET-CTF2019]KO"></a>55.[GUET-CTF2019]KO</h1><p>Ook,解码</p><blockquote><p>welcome to CTF</p></blockquote><h1 id="56-ACTF新生赛2020-base64隐写"><a href="#56-ACTF新生赛2020-base64隐写" class="headerlink" title="56.[ACTF新生赛2020]base64隐写"></a>56.[ACTF新生赛2020]base64隐写</h1><p>扫码无效，base64出错.由题得是<a href="https://ctf.anzu.link/pages/e98e1f/">base64隐写</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Base64Stego_Decrypt</span>(<span class="hljs-params">LineList</span>):<br>    Base64Char = <span class="hljs-string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span>     <span class="hljs-comment">#Base64字符集 已按照规范排列</span><br>    BinaryText = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> LineList:<br>        <span class="hljs-keyword">if</span> line.find(<span class="hljs-string">&quot;==&quot;</span>) &gt; <span class="hljs-number">0</span>:     <span class="hljs-comment">#如果文本中有2个=符号</span><br>            temp = <span class="hljs-built_in">bin</span>(Base64Char.find(line[-<span class="hljs-number">3</span>]) &amp; <span class="hljs-number">15</span>)[<span class="hljs-number">2</span>:]      <span class="hljs-comment">#通过按位与&amp;15运算取出二进制数后4位 [2:]的作用是将0b过滤掉</span><br>            BinaryText = BinaryText+<span class="hljs-string">&quot;0&quot;</span>*(<span class="hljs-number">4</span>-<span class="hljs-built_in">len</span>(temp))+temp      <span class="hljs-comment">#高位补0</span><br>        <span class="hljs-keyword">elif</span> line.find(<span class="hljs-string">&quot;=&quot;</span>) &gt; <span class="hljs-number">0</span>:        <span class="hljs-comment">#如果文本中有1个=符号</span><br>            temp = <span class="hljs-built_in">bin</span>(Base64Char.find(line[-<span class="hljs-number">2</span>]) &amp; <span class="hljs-number">3</span>)[<span class="hljs-number">2</span>:]       <span class="hljs-comment">#通过按位与&amp;3运算取出二进制数后2位</span><br>            BinaryText = BinaryText+<span class="hljs-string">&quot;0&quot;</span>*(<span class="hljs-number">2</span>-<span class="hljs-built_in">len</span>(temp))+temp      <span class="hljs-comment">#高位补0</span><br>    Text = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">len</span>(BinaryText) % <span class="hljs-number">8</span> != <span class="hljs-number">0</span>):       <span class="hljs-comment">#最终得到的隐写数据二进制位数不一定都是8的倍数，为了避免数组越界，加上一个判断</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;警告:二进制文本位数有误，将进行不完整解析。&quot;</span>)<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(BinaryText), <span class="hljs-number">8</span>):<br>            <span class="hljs-keyword">if</span>(i+<span class="hljs-number">8</span> &gt; <span class="hljs-built_in">len</span>(BinaryText)):<br>                Text = Text+<span class="hljs-string">&quot;-&quot;</span>+BinaryText[i:]<br>                <span class="hljs-keyword">return</span> Text<br>            <span class="hljs-keyword">else</span>:<br>                Text = Text+<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(BinaryText[i:i+<span class="hljs-number">8</span>], <span class="hljs-number">2</span>))<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(BinaryText), <span class="hljs-number">8</span>):<br>            Text = Text+<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(BinaryText[i:i+<span class="hljs-number">8</span>], <span class="hljs-number">2</span>))      <span class="hljs-comment">#将得到的二进制数每8位一组对照ASCII码转化字符</span><br>        <span class="hljs-keyword">return</span> Text<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Base64_ForString_Decrypt</span>(<span class="hljs-params">Text</span>):     <span class="hljs-comment">#Base64解密</span><br>    <span class="hljs-keyword">try</span>:<br>        DecryptedText = <span class="hljs-built_in">str</span>(Text).encode(<span class="hljs-string">&quot;utf-8&quot;</span>)<br>        DecryptedText = base64.b64decode(DecryptedText)<br>        DecryptedText = DecryptedText.decode(<span class="hljs-string">&quot;utf-8&quot;</span>)<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">return</span> DecryptedText<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    Course = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;文件名:&quot;</span>)<br>    File = <span class="hljs-built_in">open</span>(Course, <span class="hljs-string">&quot;r&quot;</span>)<br>    LineList = File.read().splitlines()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;显式内容为:&quot;</span>)<br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> LineList:<br>        <span class="hljs-built_in">print</span>(Base64_ForString_Decrypt(line),end=<span class="hljs-string">&quot;&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;隐写内容为:&quot;</span>)<br>    <span class="hljs-built_in">print</span>(Base64Stego_Decrypt(LineList))<br></code></pre></td></tr></table></figure><blockquote><p>flag{6aseb4_f33!}</p></blockquote><h1 id="57-MRCTF2020-ezmisc"><a href="#57-MRCTF2020-ezmisc" class="headerlink" title="57.[MRCTF2020]ezmisc"></a>57.[MRCTF2020]ezmisc</h1><p>010打开，CRC校验错误<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.2h8a0mro1d.webp" alt="1"><br>脚本爆破<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.7egquh6gsq.webp" alt="2"></p><h1 id="58-GXYCTF2019-gakki"><a href="#58-GXYCTF2019-gakki" class="headerlink" title="58.[GXYCTF2019]gakki"></a>58.[GXYCTF2019]gakki</h1><p>分离文件得到加密rar，4位数字破解得8864<br>打开txt发现一堆无意义字符，做词频统计</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> collections <span class="hljs-keyword">import</span> Counter<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">char_frequency_from_file</span>(<span class="hljs-params">filename</span>):<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>        text = file.read()<br>    <span class="hljs-comment"># 统计每个字符的频率</span><br>    frequency = Counter(text)<br>    <span class="hljs-comment"># 按频率从多到少排序</span><br>    sorted_frequency = <span class="hljs-built_in">sorted</span>(frequency.items(), key=<span class="hljs-keyword">lambda</span> x: x[<span class="hljs-number">1</span>], reverse=<span class="hljs-literal">True</span>)<br>    <span class="hljs-keyword">return</span> sorted_frequency<br><br><span class="hljs-comment"># 文件名</span><br>filename = <span class="hljs-string">&#x27;flag.txt&#x27;</span><br><br><span class="hljs-comment"># 计算字频并排序</span><br>freq = char_frequency_from_file(filename)<br><br><span class="hljs-comment"># 打印结果</span><br><span class="hljs-keyword">for</span> char, count <span class="hljs-keyword">in</span> freq:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;char&#125;</span>: <span class="hljs-subst">&#123;count&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.eshd8ennq.webp" alt="1"></p><blockquote><p>flag{gaki_IsMyw1fe}</p></blockquote><h1 id="59-HBNIS2018-caesar"><a href="#59-HBNIS2018-caesar" class="headerlink" title="59.[HBNIS2018]caesar"></a>59.[HBNIS2018]caesar</h1><p>凯撒密码，偏移量1，解出明文</p><blockquote><p>flagiscaesar</p></blockquote><h1 id="60-SUCTF2018-single-dog"><a href="#60-SUCTF2018-single-dog" class="headerlink" title="60.[SUCTF2018]single dog"></a>60.[SUCTF2018]single dog</h1><p>010打开，看到504B0304，鉴定为zip文件.<br>解压得到1.txt,打开<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.1hs6pbf7qy.webp" alt="1"><br>搜索颜文字加密，解得</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs abnf">function a()<br>&#123;<br>var a<span class="hljs-operator">=</span><span class="hljs-string">&quot;SUCTF&#123;happy double eleven&#125;&quot;</span><span class="hljs-comment">;</span><br>alert(<span class="hljs-string">&quot;双十一快乐&quot;</span>)<span class="hljs-comment">;</span><br>&#125;<br>a()<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><blockquote><p>flag{happy double eleven}</p></blockquote><h1 id="61-HBNIS2018-低个头"><a href="#61-HBNIS2018-低个头" class="headerlink" title="61.[HBNIS2018]低个头"></a>61.[HBNIS2018]低个头</h1><p>密文EWAZX RTY TGB IJN IO KL<br>在键盘上画出<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.92q3tlb3xn.webp" alt="1"><br>flag{CTF}</p><h1 id="62-黑客帝国"><a href="#62-黑客帝国" class="headerlink" title="62.黑客帝国"></a>62.黑客帝国</h1><p>010打开发现是rar，保存.破解密码为3690<br>解压出打不开的png,010打开发现文件头是png，但应该是jpg文件.<br>修改为<code>FF D8 FF E0</code><br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.6pnhcfvjpo.webp" alt="1"></p><h1 id="63-SWPU2019-伟大的侦探"><a href="#63-SWPU2019-伟大的侦探" class="headerlink" title="63.[SWPU2019]伟大的侦探"></a>63.[SWPU2019]伟大的侦探</h1><p>记事本打开是乱码，用010打开，换成EBCDIC编码<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.2h8a2q2xc1.webp" alt="1"><br>得到压缩包密码，解压发现文件中是跳舞小人密码<br><a href="https://codepen.io/anie116/full/jdzvJK">对照表</a></p><blockquote><p>flag{iloveholmesandwllm}</p></blockquote><h1 id="64-MRCTF2020-你能看懂音符吗"><a href="#64-MRCTF2020-你能看懂音符吗" class="headerlink" title="64.[MRCTF2020]你能看懂音符吗"></a>64.[MRCTF2020]你能看懂音符吗</h1><p>打不开的rar，010打开发现文件头错误，修改<br><code>52 61 72 21</code><br>解压出docx，010打开发现是zip，修改后缀.<br>打开\word\document.xml,看到音符加密</p><blockquote><p>♭♯♪‖¶♬♭♭♪♭‖‖♭♭♬‖♫♪‖♩♬‖♬♬♭♭♫‖♩♫‖♬♪♭♭♭‖¶∮‖‖‖‖♩♬‖♬♪‖♩♫♭♭♭♭♭§‖♩♩♭♭♫♭♭♭‖♬♭‖¶§♭♭♯‖♫∮‖♬¶‖¶∮‖♬♫‖♫♬‖♫♫§&#x3D;</p></blockquote><p><a href="https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=yinyue">解密</a></p><blockquote><p>flag{thEse_n0tes_ArE_am@zing~}</p></blockquote><h1 id="65-我吃三明治"><a href="#65-我吃三明治" class="headerlink" title="65.我吃三明治"></a>65.我吃三明治</h1><p>010打开发现里面藏着另一张jpg<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.8ojo7y74ok.webp" alt="1"><br>复制出来是一张大一点的三明治，没什么用<br>在两张图片中间发现特殊字符串<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/2.86tmjd5r3p.webp" alt="2"><br>base32解得<code>flag&#123;6f1797d4080b29b64da5897780463e30&#125;</code></p><h1 id="66-SWPU2019-你有没有好好看网课"><a href="#66-SWPU2019-你有没有好好看网课" class="headerlink" title="66.[SWPU2019]你有没有好好看网课?"></a>66.[SWPU2019]你有没有好好看网课?</h1><h1 id="67-ACTF新生赛2020-NTFS数据流"><a href="#67-ACTF新生赛2020-NTFS数据流" class="headerlink" title="67.[ACTF新生赛2020]NTFS数据流"></a>67.[ACTF新生赛2020]NTFS数据流</h1><p>用<strong>WinRAR</strong>解压flag.rar<br>按大小排序，找到一个不一样的<br><img src="https://kyon0930.github.io/picx-images-hosting/CTF/1.2krw73sgbo.webp" alt="1"><br>命令行输入<code>notepad 293.txt:flag.txt</code>得到flag</p>]]></content>
    
    
    <categories>
      
      <category>CTF_wp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BUUCTF</tag>
      
      <tag>Misc</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
